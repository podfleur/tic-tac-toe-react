{"ast":null,"code":"var _jsxFileName = \"/home/claire/code/tic-tac-toe/src/App.js\",\n  _s = $RefreshSig$();\nimport { useState } from 'react';\nimport { Board } from './board.js';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n/*#__PURE__*/_jsxDEV(Board, {\n  xIsNext: xIsNext,\n  squares: currentSquares,\n  onPlay: handlePlay,\n  winningSquares: winningSquares\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 4,\n  columnNumber: 1\n}, this);\nexport default function Game() {\n  _s();\n  const [history, setHistory] = useState([{\n    squares: Array(9).fill(null),\n    location: null\n  }]);\n  const [currentMove, setCurrentMove] = useState(0);\n  const [isAscending, setIsAscending] = useState(true);\n  const xIsNext = currentMove % 2 === 0;\n  const currentSquares = history[currentMove].squares;\n  function handlePlay(nextSquares, location) {\n    const nextHistory = [...history.slice(0, currentMove + 1), {\n      squares: nextSquares,\n      location\n    }];\n    setHistory(nextHistory);\n    setCurrentMove(nextHistory.length - 1);\n  }\n  function jumpTo(nextMove) {\n    setCurrentMove(nextMove);\n  }\n  function toggleSortOrder() {\n    setIsAscending(!isAscending);\n  }\n  const moves = history.map((squares, move) => {\n    let description;\n    const location = squares.location;\n    const col = location % 3 + 1;\n    const row = Math.floor(location / 3) + 1;\n    if (move > 0) {\n      description = `Aller au coup n°${move} (colonne : ${col}, ligne : ${row})`;\n    } else {\n      description = 'Revenir au début';\n    }\n    if (move === currentMove) {\n      description = 'Tour actuel : ' + move;\n      return /*#__PURE__*/_jsxDEV(\"p\", {\n        children: description\n      }, move, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 9\n      }, this);\n    } else {\n      return /*#__PURE__*/_jsxDEV(\"li\", {\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => jumpTo(move),\n          children: description\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 11\n        }, this)\n      }, move, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 9\n      }, this);\n    }\n  });\n  if (!isAscending) {\n    moves.reverse();\n  }\n  const winnerInfo = calculateWinner(currentSquares);\n  const winningSquares = winnerInfo ? winnerInfo.line : null;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"game\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"game-board\",\n      children: /*#__PURE__*/_jsxDEV(Board, {\n        xIsNext: xIsNext,\n        squares: currentSquares,\n        onPlay: handlePlay,\n        winningSquares: winningSquares\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"game-info\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: toggleSortOrder,\n        children: isAscending ? 'Trier par ordre décroissant' : 'Trier par ordre croissant'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"ol\", {\n        children: moves\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 61,\n    columnNumber: 5\n  }, this);\n}\n_s(Game, \"3/HFgG6UIO3Po/IEdAYtU6bpx/c=\");\n_c = Game;\nfunction calculateWinner(squares) {\n  const lines = [[0, 1, 2], [3, 4, 5], [6, 7, 8], [0, 3, 6], [1, 4, 7], [2, 5, 8], [0, 4, 8], [2, 4, 6]];\n  for (let i = 0; i < lines.length; i++) {\n    const [a, b, c] = lines[i];\n    if (squares[a] && squares[a] === squares[b] && squares[a] === squares[c]) {\n      return {\n        winner: squares[a],\n        line: lines[i]\n      };\n    }\n  }\n  return null;\n}\nvar _c;\n$RefreshReg$(_c, \"Game\");","map":{"version":3,"names":["useState","Board","jsxDEV","_jsxDEV","xIsNext","squares","currentSquares","onPlay","handlePlay","winningSquares","fileName","_jsxFileName","lineNumber","columnNumber","Game","_s","history","setHistory","Array","fill","location","currentMove","setCurrentMove","isAscending","setIsAscending","nextSquares","nextHistory","slice","length","jumpTo","nextMove","toggleSortOrder","moves","map","move","description","col","row","Math","floor","children","onClick","reverse","winnerInfo","calculateWinner","line","className","_c","lines","i","a","b","c","winner","$RefreshReg$"],"sources":["/home/claire/code/tic-tac-toe/src/App.js"],"sourcesContent":["import { useState } from 'react';\nimport { Board } from './board.js';\n\n<Board xIsNext={xIsNext} squares={currentSquares} onPlay={handlePlay} winningSquares={winningSquares} />\n\nexport default function Game() {\n  const [history, setHistory] = useState([{ squares: Array(9).fill(null), location: null }]);\n  const [currentMove, setCurrentMove] = useState(0);\n  const [isAscending, setIsAscending] = useState(true);\n  const xIsNext = currentMove % 2 === 0;\n  const currentSquares = history[currentMove].squares;\n\n  function handlePlay(nextSquares, location) {\n    const nextHistory = [...history.slice(0, currentMove + 1), { squares: nextSquares, location }];\n    setHistory(nextHistory);\n    setCurrentMove(nextHistory.length - 1);\n  }\n\n  function jumpTo(nextMove) {\n    setCurrentMove(nextMove);\n  }\n\n  function toggleSortOrder() {\n    setIsAscending(!isAscending);\n  }\n\n  const moves = history.map((squares, move) => {\n    let description;\n    const location = squares.location;\n    const col = location % 3 + 1;\n    const row = Math.floor(location / 3) + 1;\n\n    if (move > 0) {\n      description = `Aller au coup n°${move} (colonne : ${col}, ligne : ${row})`;\n    } else {\n      description = 'Revenir au début';\n    }\n\n    if (move === currentMove) {\n      description = 'Tour actuel : ' + move;\n      return (\n        <p key={move}>{description}</p>\n      );\n    } else {\n      return (\n        <li key={move}>\n          <button onClick={() => jumpTo(move)}>{description}</button>\n        </li>\n      );\n    }\n  });\n\n  if (!isAscending) {\n    moves.reverse();\n  }\n\n  const winnerInfo = calculateWinner(currentSquares);\n  const winningSquares = winnerInfo ? winnerInfo.line : null;\n\n  return (\n    <div className=\"game\">\n      <div className=\"game-board\">\n        <Board xIsNext={xIsNext} squares={currentSquares} onPlay={handlePlay} winningSquares={winningSquares} />\n      </div>\n      <div className=\"game-info\">\n        <button onClick={toggleSortOrder}>\n          {isAscending ? 'Trier par ordre décroissant' : 'Trier par ordre croissant'}\n        </button>\n        <ol>{moves}</ol>\n      </div>\n    </div>\n  );\n}\n\nfunction calculateWinner(squares) {\n  const lines = [\n    [0, 1, 2],\n    [3, 4, 5],\n    [6, 7, 8],\n    [0, 3, 6],\n    [1, 4, 7],\n    [2, 5, 8],\n    [0, 4, 8],\n    [2, 4, 6],\n  ];\n  for (let i = 0; i < lines.length; i++) {\n    const [a, b, c] = lines[i];\n    if (squares[a] && squares[a] === squares[b] && squares[a] === squares[c]) {\n      return { winner: squares[a], line: lines[i] };\n    }\n  }\n  return null;\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}