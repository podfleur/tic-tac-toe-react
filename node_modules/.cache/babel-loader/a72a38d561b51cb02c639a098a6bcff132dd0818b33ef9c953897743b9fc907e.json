{"ast":null,"code":"var _jsxFileName = \"/home/claire/code/tic-tac-toe/src/App.js\",\n  _s = $RefreshSig$();\nimport { useEffect, useState } from 'react';\nimport Board from './board.js';\nimport { Move } from './move.js';\nimport { ToggleSortOrder } from './toggleSortOrder.js';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport function calculateWinner(squares) {\n  const lines = [[0, 1, 2], [3, 4, 5], [6, 7, 8], [0, 3, 6], [1, 4, 7], [2, 5, 8], [0, 4, 8], [2, 4, 6]];\n  for (let i = 0; i < lines.length; i++) {\n    const [a, b, c] = lines[i];\n    if (squares[a] && squares[a] === squares[b] && squares[a] === squares[c]) {\n      return {\n        winner: squares[a],\n        line: lines[i]\n      };\n    }\n  }\n  return null;\n}\nexport default function Game() {\n  _s();\n  const [history, setHistory] = useState([{\n    squares: Array(9).fill(null),\n    location: 0\n  }]);\n  const [currentMove, setCurrentMove] = useState(0);\n  const [isAscending, setIsAscending] = useState(true);\n  const xIsNext = currentMove % 2 === 0;\n  const currentSquares = history[currentMove].squares;\n  const winnerInfo = calculateWinner(currentSquares);\n  const winningSquares = winnerInfo ? winnerInfo.line : null;\n  const indexes = history.map(({\n    location\n  }, historyIndex) => /*#__PURE__*/_jsxDEV(Move, {\n    jumpTo: jumpTo,\n    location: location,\n    historyIndex: historyIndex,\n    currentMove: currentMove\n  }, `move-${historyIndex}`, false, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 5\n  }, this));\n  function handlePlay(squares, location) {\n    const newHistory = history.slice(0, currentMove + 1);\n    setHistory([...newHistory, {\n      squares,\n      location\n    }]);\n    setCurrentMove(newHistory.length);\n  }\n  function jumpTo(nextMove) {\n    setCurrentMove(nextMove);\n  }\n  function sortOrder() {\n    setIsAscending(!isAscending);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"game\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"game-board\",\n      children: /*#__PURE__*/_jsxDEV(Board, {\n        xIsNext: xIsNext,\n        squares: currentSquares,\n        onPlay: handlePlay,\n        winningSquares: winningSquares,\n        winnerInfo: winnerInfo\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"game-info\",\n      children: [/*#__PURE__*/_jsxDEV(ToggleSortOrder, {\n        isAscending: isAscending,\n        sortOrder: sortOrder\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"'Tour actuel : ' \", currentMove]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"ol\", {\n        children: isAscending ? indexes : indexes.reverse()\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 57,\n    columnNumber: 5\n  }, this);\n}\n_s(Game, \"khw+xfwVk5u1fOW+Y+qkEPCgzKs=\");\n_c = Game;\nvar _c;\n$RefreshReg$(_c, \"Game\");","map":{"version":3,"names":["useEffect","useState","Board","Move","ToggleSortOrder","jsxDEV","_jsxDEV","calculateWinner","squares","lines","i","length","a","b","c","winner","line","Game","_s","history","setHistory","Array","fill","location","currentMove","setCurrentMove","isAscending","setIsAscending","xIsNext","currentSquares","winnerInfo","winningSquares","indexes","map","historyIndex","jumpTo","fileName","_jsxFileName","lineNumber","columnNumber","handlePlay","newHistory","slice","nextMove","sortOrder","className","children","onPlay","reverse","_c","$RefreshReg$"],"sources":["/home/claire/code/tic-tac-toe/src/App.js"],"sourcesContent":["import { useEffect, useState } from 'react';\nimport Board from './board.js';\nimport { Move } from './move.js';\nimport { ToggleSortOrder } from './toggleSortOrder.js';\n\nexport function calculateWinner(squares) {\n  const lines = [\n    [0, 1, 2],\n    [3, 4, 5],\n    [6, 7, 8],\n    [0, 3, 6],\n    [1, 4, 7],\n    [2, 5, 8],\n    [0, 4, 8],\n    [2, 4, 6],\n  ];\n  for (let i = 0; i < lines.length; i++) {\n    const [a, b, c] = lines[i];\n    if (squares[a] && squares[a] === squares[b] && squares[a] === squares[c]) {\n      return { winner: squares[a], line: lines[i] };\n    }\n  }\n  return (null);\n} \n\nexport default function Game() {\n  const [history, setHistory] = useState([{ squares: Array(9).fill(null), location: 0 }]);\n  const [currentMove, setCurrentMove] = useState(0);\n  const [isAscending, setIsAscending] = useState(true);\n  const xIsNext = currentMove % 2 === 0;\n  const currentSquares = history[currentMove].squares;\n\n  const winnerInfo = calculateWinner(currentSquares);\n  const winningSquares = winnerInfo ? winnerInfo.line : null;\n\n  const indexes = history.map(({location}, historyIndex) => (\n    <Move key={`move-${historyIndex}`} jumpTo={jumpTo} location={location} historyIndex={historyIndex} currentMove={currentMove} />\n  ))\n\n  function handlePlay(squares, location) {\n    const newHistory = history.slice(0, currentMove + 1);\n    setHistory([...newHistory, { squares, location }]);\n    setCurrentMove(newHistory.length);\n  }\n  \n  function jumpTo(nextMove) {\n    setCurrentMove(nextMove);\n  \n  }\n\n  function sortOrder() {\n    setIsAscending(!isAscending);\n  }\n\n  return (\n\n    <div className=\"game\">\n      <div className=\"game-board\">\n        <Board xIsNext={xIsNext} squares={currentSquares} onPlay={handlePlay} winningSquares={winningSquares} winnerInfo={winnerInfo} />\n      </div>\n      <div className=\"game-info\">\n        <ToggleSortOrder isAscending={isAscending} sortOrder={sortOrder} />\n        <p>\n          'Tour actuel : ' {currentMove}\n        </p>\n        <ol> \n          {isAscending ? indexes : indexes.reverse()}\n        </ol>\n      </div>\n    </div>\n  );\n}\n\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}