{"ast":null,"code":"var _jsxFileName = \"/home/claire/code/tic-tac-toe/src/App.js\",\n  _s = $RefreshSig$();\nimport { useState } from 'react';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction Square({\n  value,\n  onSquareClick,\n  isWinningSquare\n}) {\n  return /*#__PURE__*/_jsxDEV(\"button\", {\n    className: `square ${isWinningSquare ? 'winning' : ''}`,\n    onClick: onSquareClick,\n    children: value\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 5,\n    columnNumber: 5\n  }, this);\n}\n_c = Square;\nfunction Board({\n  xIsNext,\n  squares,\n  onPlay,\n  winningSquares\n}) {\n  function handleClick(i) {\n    if (calculateWinner(squares) || squares[i]) {\n      return;\n    }\n    const nextSquares = squares.slice();\n    if (xIsNext) {\n      nextSquares[i] = 'X';\n    } else {\n      nextSquares[i] = 'O';\n    }\n    onPlay(nextSquares, i);\n  }\n  const winnerInfo = calculateWinner(squares);\n  const winner = winnerInfo ? winnerInfo.winner : null;\n  let status;\n  if (squares.every(Boolean)) {\n    status = 'Match nul';\n  } else if (winner) {\n    status = winner + ' a gagné';\n  } else {\n    status = 'Prochain tour : ' + (xIsNext ? 'X' : 'O');\n  }\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"status\",\n      children: status\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this), [0, 1, 2].map(row => /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"board-row\",\n      children: [0, 1, 2].map(col => {\n        const index = row * 3 + col;\n        return /*#__PURE__*/_jsxDEV(Square, {\n          value: squares[index],\n          onSquareClick: () => handleClick(index),\n          isWinningSquare: winningSquares && winningSquares.includes(index)\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 15\n        }, this);\n      })\n    }, row, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 9\n    }, this))]\n  }, void 0, true);\n}\n_c2 = Board;\nexport default function Game() {\n  _s();\n  const [history, setHistory] = useState([{\n    squares: Array(9).fill(null),\n    location: null\n  }]);\n  const [currentMove, setCurrentMove] = useState(0);\n  const [isAscending, setIsAscending] = useState(true);\n  const xIsNext = currentMove % 2 === 0;\n  const currentSquares = history[currentMove].squares;\n  function handlePlay(nextSquares, location) {\n    const nextHistory = [...history.slice(0, currentMove + 1), {\n      squares: nextSquares,\n      location\n    }];\n    setHistory(nextHistory);\n    setCurrentMove(nextHistory.length - 1);\n  }\n  function jumpTo(nextMove) {\n    setCurrentMove(nextMove);\n  }\n  function toggleSortOrder() {\n    setIsAscending(!isAscending);\n  }\n  const moves = history.map((step, move) => {\n    const {\n      location\n    } = step;\n    const col = location % 3;\n    const row = Math.floor(location / 3);\n    let description;\n    if (move > 0) {\n      description = `Aller au coup #${move} (ligne: ${row + 1}, colonne: ${col + 1})`;\n    } else {\n      description = 'Revenir au début';\n    }\n    if (move === currentMove) {\n      description = 'Tour actuel : ' + move;\n      return /*#__PURE__*/_jsxDEV(\"p\", {\n        children: description\n      }, move, false, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 9\n      }, this);\n    } else {\n      return /*#__PURE__*/_jsxDEV(\"li\", {\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => jumpTo(move),\n          children: description\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 11\n        }, this)\n      }, move, false, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 9\n      }, this);\n    }\n  });\n  if (!isAscending) {\n    moves.reverse();\n  }\n  const winnerInfo = calculateWinner(currentSquares);\n  const winningSquares = winnerInfo ? winnerInfo.line : null;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"game\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"game-board\",\n      children: /*#__PURE__*/_jsxDEV(Board, {\n        xIsNext: xIsNext,\n        squares: currentSquares,\n        onPlay: handlePlay,\n        winningSquares: winningSquares\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"game-info\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: toggleSortOrder,\n        children: isAscending ? 'Trier par ordre décroissant' : 'Trier par ordre croissant'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"ol\", {\n        children: moves\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 115,\n    columnNumber: 5\n  }, this);\n}\n_s(Game, \"3/HFgG6UIO3Po/IEdAYtU6bpx/c=\");\n_c3 = Game;\nfunction calculateWinner(squares) {\n  const lines = [[0, 1, 2], [3, 4, 5], [6, 7, 8], [0, 3, 6], [1, 4, 7], [2, 5, 8], [0, 4, 8], [2, 4, 6]];\n  for (let i = 0; i < lines.length; i++) {\n    const [a, b, c] = lines[i];\n    if (squares[a] && squares[a] === squares[b] && squares[a] === squares[c]) {\n      return {\n        winner: squares[a],\n        line: lines[i]\n      };\n    }\n  }\n  return null;\n}\nvar _c, _c2, _c3;\n$RefreshReg$(_c, \"Square\");\n$RefreshReg$(_c2, \"Board\");\n$RefreshReg$(_c3, \"Game\");","map":{"version":3,"names":["useState","jsxDEV","_jsxDEV","Fragment","_Fragment","Square","value","onSquareClick","isWinningSquare","className","onClick","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","Board","xIsNext","squares","onPlay","winningSquares","handleClick","i","calculateWinner","nextSquares","slice","winnerInfo","winner","status","every","Boolean","map","row","col","index","includes","_c2","Game","_s","history","setHistory","Array","fill","location","currentMove","setCurrentMove","isAscending","setIsAscending","currentSquares","handlePlay","nextHistory","length","jumpTo","nextMove","toggleSortOrder","moves","step","move","Math","floor","description","reverse","line","_c3","lines","a","b","c","$RefreshReg$"],"sources":["/home/claire/code/tic-tac-toe/src/App.js"],"sourcesContent":["import { useState } from 'react';\n\nfunction Square({ value, onSquareClick, isWinningSquare }) {\n  return (\n    <button className={`square ${isWinningSquare ? 'winning' : ''}`} onClick={onSquareClick}>\n      {value}\n    </button>\n  );\n}\n\nfunction Board({ xIsNext, squares, onPlay, winningSquares }) {\n  function handleClick(i) {\n    if (calculateWinner(squares) || squares[i]) {\n      return;\n    }\n    const nextSquares = squares.slice();\n    if (xIsNext) {\n      nextSquares[i] = 'X';\n    } else {\n      nextSquares[i] = 'O';\n    }\n    onPlay(nextSquares, i);\n  }\n\n  const winnerInfo = calculateWinner(squares);\n  const winner = winnerInfo ? winnerInfo.winner : null;\n\n  let status;\n  if (squares.every(Boolean)) {\n    status = 'Match nul';\n  }\n  else if (winner) {\n    status = winner + ' a gagné';\n  } else {\n    status = 'Prochain tour : ' + (xIsNext ? 'X' : 'O');\n  }\n\n  return (\n    <>\n      <div className=\"status\">{status}</div>\n      {[0, 1, 2].map(row => (\n        <div key={row} className=\"board-row\">\n          {[0, 1, 2].map(col => {\n            const index = row * 3 + col;\n            return (\n              <Square\n                key={index}\n                value={squares[index]}\n                onSquareClick={() => handleClick(index)}\n                isWinningSquare={winningSquares && winningSquares.includes(index)}\n              />\n            );\n          })}\n        </div>\n      ))}\n    </>\n  );\n}\n\nexport default function Game() {\n  const [history, setHistory] = useState([{ squares: Array(9).fill(null), location: null }]);\n  const [currentMove, setCurrentMove] = useState(0);\n  const [isAscending, setIsAscending] = useState(true);\n  const xIsNext = currentMove % 2 === 0;\n  const currentSquares = history[currentMove].squares;\n\n  function handlePlay(nextSquares, location) {\n    const nextHistory = [...history.slice(0, currentMove + 1), { squares: nextSquares, location }];\n    setHistory(nextHistory);\n    setCurrentMove(nextHistory.length - 1);\n  }\n\n  function jumpTo(nextMove) {\n    setCurrentMove(nextMove);\n  }\n\n  function toggleSortOrder() {\n    setIsAscending(!isAscending);\n  }\n\n  const moves = history.map((step, move) => {\n    const { location } = step;\n    const col = location % 3;\n    const row = Math.floor(location / 3);\n    let description;\n\n    if (move > 0) {\n      description = `Aller au coup #${move} (ligne: ${row + 1}, colonne: ${col + 1})`;\n    } else {\n      description = 'Revenir au début';\n    }\n\n    if (move === currentMove) {\n      description = 'Tour actuel : ' + move;\n      return (\n        <p key={move}>{description}</p>\n      );\n    } else {\n      return (\n        <li key={move}>\n          <button onClick={() => jumpTo(move)}>{description}</button>\n        </li>\n      );\n    }\n  });\n\n  if (!isAscending) {\n    moves.reverse();\n  }\n\n  const winnerInfo = calculateWinner(currentSquares);\n  const winningSquares = winnerInfo ? winnerInfo.line : null;\n\n  return (\n    <div className=\"game\">\n      <div className=\"game-board\">\n        <Board xIsNext={xIsNext} squares={currentSquares} onPlay={handlePlay} winningSquares={winningSquares} />\n      </div>\n      <div className=\"game-info\">\n        <button onClick={toggleSortOrder}>\n          {isAscending ? 'Trier par ordre décroissant' : 'Trier par ordre croissant'}\n        </button>\n        <ol>{moves}</ol>\n      </div>\n    </div>\n  );\n}\n\nfunction calculateWinner(squares) {\n  const lines = [\n    [0, 1, 2],\n    [3, 4, 5],\n    [6, 7, 8],\n    [0, 3, 6],\n    [1, 4, 7],\n    [2, 5, 8],\n    [0, 4, 8],\n    [2, 4, 6],\n  ];\n  for (let i = 0; i < lines.length; i++) {\n    const [a, b, c] = lines[i];\n    if (squares[a] && squares[a] === squares[b] && squares[a] === squares[c]) {\n      return { winner: squares[a], line: lines[i] };\n    }\n  }\n  return null;\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}