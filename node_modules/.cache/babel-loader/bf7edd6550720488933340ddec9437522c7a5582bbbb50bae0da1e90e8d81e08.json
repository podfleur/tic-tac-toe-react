{"ast":null,"code":"var _jsxFileName = \"/home/claire/code/tic-tac-toe/src/App.js\",\n  _s = $RefreshSig$();\nimport { useState } from 'react';\nimport Board from './board.js';\nimport { Move } from './move.js';\nimport { ToggleSortOrder } from './toggleSortOrder.js';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Game() {\n  _s();\n  const [history, setHistory] = useState([{\n    squares: Array(9).fill(null),\n    location: 0\n  }]);\n  const [currentMove, setCurrentMove] = useState(0);\n  const [isAscending, setIsAscending] = useState(true);\n  const currentSquares = history[currentMove].squares;\n  const {\n    winner,\n    line\n  } = calculateWinner(currentSquares);\n  const indexes = history.map(({\n    location\n  }, historyIndex) => /*#__PURE__*/_jsxDEV(Move, {\n    jumpTo: jumpTo,\n    location: location,\n    historyIndex: historyIndex,\n    currentMove: currentMove\n  }, `move-${historyIndex}`, false, {\n    fileName: _jsxFileName,\n    lineNumber: 15,\n    columnNumber: 5\n  }, this));\n  function handlePlay(squares, location) {\n    const newHistory = history.slice(0, currentMove + 1);\n    setHistory([...newHistory, {\n      squares,\n      location\n    }]);\n    setCurrentMove(newHistory.length);\n  }\n  function jumpTo(nextMove) {\n    setCurrentMove(nextMove);\n  }\n  function sortOrder() {\n    setIsAscending(!isAscending);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"game\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"game-board\",\n      children: /*#__PURE__*/_jsxDEV(Board, {\n        currentMove: currentMove,\n        squares: currentSquares,\n        onPlay: handlePlay,\n        winningSquares: line,\n        winner: winner\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"game-info\",\n      children: [/*#__PURE__*/_jsxDEV(ToggleSortOrder, {\n        isAscending: isAscending,\n        sortOrder: sortOrder\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\" Tour actuel : \", currentMove]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"ol\", {\n        children: isAscending ? indexes : indexes.reverse()\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 5\n  }, this);\n}\n_s(Game, \"khw+xfwVk5u1fOW+Y+qkEPCgzKs=\");\n_c = Game;\nexport function calculateWinner(squares) {\n  const lines = [[0, 1, 2], [3, 4, 5], [6, 7, 8], [0, 3, 6], [1, 4, 7], [2, 5, 8], [0, 4, 8], [2, 4, 6]];\n  for (let i = 0; i < lines.length; i++) {\n    const [a, b, c] = lines[i];\n    if (squares[a] && squares[a] === squares[b] && squares[a] === squares[c]) {\n      return {\n        winner: squares[a],\n        line: lines[i]\n      };\n    }\n  }\n  return {\n    winner: null,\n    line: []\n  };\n}\nvar _c;\n$RefreshReg$(_c, \"Game\");","map":{"version":3,"names":["useState","Board","Move","ToggleSortOrder","jsxDEV","_jsxDEV","Game","_s","history","setHistory","squares","Array","fill","location","currentMove","setCurrentMove","isAscending","setIsAscending","currentSquares","winner","line","calculateWinner","indexes","map","historyIndex","jumpTo","fileName","_jsxFileName","lineNumber","columnNumber","handlePlay","newHistory","slice","length","nextMove","sortOrder","className","children","onPlay","winningSquares","reverse","_c","lines","i","a","b","c","$RefreshReg$"],"sources":["/home/claire/code/tic-tac-toe/src/App.js"],"sourcesContent":["import {useState } from 'react';\nimport Board from './board.js';\nimport { Move } from './move.js';\nimport { ToggleSortOrder } from './toggleSortOrder.js';\n\nexport default function Game() {\n  const [history, setHistory] = useState([{ squares: Array(9).fill(null), location: 0 }]);\n  const [currentMove, setCurrentMove] = useState(0);\n  const [isAscending, setIsAscending] = useState(true);\n  const currentSquares = history[currentMove].squares;\n\n  const { winner, line } = calculateWinner(currentSquares);\n\n  const indexes = history.map(({location}, historyIndex) => (\n    <Move key={`move-${historyIndex}`} jumpTo={jumpTo} location={location} historyIndex={historyIndex} currentMove={currentMove} />\n  ));\n\n  function handlePlay(squares, location) {\n    const newHistory = history.slice(0, currentMove + 1);\n    setHistory([...newHistory, { squares, location }]);\n    setCurrentMove(newHistory.length);\n  }\n  \n  function jumpTo(nextMove) {\n    setCurrentMove(nextMove);\n  }\n\n  function sortOrder() {\n    setIsAscending(!isAscending);\n  }\n\n  return (\n    <div className=\"game\">\n      <div className=\"game-board\">\n        <Board currentMove={currentMove} squares={currentSquares} onPlay={handlePlay} winningSquares={line} winner={winner} />\n      </div>\n      <div className=\"game-info\">\n        <ToggleSortOrder isAscending={isAscending} sortOrder={sortOrder} />\n        <p> Tour actuel : {currentMove}</p>\n        <ol> \n          {isAscending ? indexes : indexes.reverse()}\n        </ol>\n      </div>\n    </div>\n  );\n}\n\nexport function calculateWinner(squares) {\n  const lines = [\n    [0, 1, 2],\n    [3, 4, 5],\n    [6, 7, 8],\n    [0, 3, 6],\n    [1, 4, 7],\n    [2, 5, 8],\n    [0, 4, 8],\n    [2, 4, 6],\n  ];\n  for (let i = 0; i < lines.length; i++) {\n    const [a, b, c] = lines[i];\n    if (squares[a] && squares[a] === squares[b] && squares[a] === squares[c]) {\n      return { winner: squares[a], line: lines[i] };\n    }\n  }\n  return { winner: null, line: [] };\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}